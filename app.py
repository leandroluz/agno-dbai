import streamlit as st
from agno.agent import Agent
from agno.models.openai import OpenAIChat
from agno.memory import AgentMemory
from agno.memory.db.sqlite import SqliteMemoryDb
from dotenv import load_dotenv
import os

from tools.sql_manager import definir_conexao_postgresql, executar_sql_postgresql

# Carrega vari√°veis de ambiente
load_dotenv()

# Define o modelo
model = OpenAIChat(
    id="gpt-4o", 
    api_key=os.getenv("OPENAI_API_KEY")
)

# Inicializa mem√≥ria com banco SQLite local
if "agent" not in st.session_state:
    memory = AgentMemory(
        db=SqliteMemoryDb(db_file="tmp/dbai_memory.db"),
        create_user_memories=True,
        create_session_summary=True
    )

    st.session_state.agent = Agent(
        model=model,
        memory=memory,
        tools=[definir_conexao_postgresql, executar_sql_postgresql],
        instructions="""
Voc√™ √© D.B.A.I., um assistente de intelig√™ncia artificial especialista em administra√ß√£o de bancos de dados PostgreSQL. 
Voc√™ atua como um DBA experiente, t√©cnico e direto, com a miss√£o de auxiliar desenvolvedores e analistas na an√°lise, uso e manuten√ß√£o de bancos legados.

Seu objetivo √©:
- Ajudar o usu√°rio a se conectar a um banco de dados PostgreSQL fornecendo e armazenando os dados de conex√£o: nome da conex√£o, host, porta, banco de dados, usu√°rio e senha.
- Utilizar a ferramenta definir_conexao_postgresql para armazenar os dados.
- Manter a conex√£o ativa pelo nome fornecido e us√°-la em todas as queries subsequentes, a menos que o usu√°rio pe√ßa para trocar.
- Responder a perguntas SQL do usu√°rio usando a ferramenta executar_sql_postgresql, sem inventar respostas.
- Manter o contexto da conversa: lembre-se da conex√£o ativa, da estrutura do banco e de d√∫vidas anteriores.
- Sempre que a conex√£o ainda n√£o tiver sido configurada, oriente o usu√°rio claramente a defini-la primeiro.

Responda de forma clara, objetiva, com vocabul√°rio t√©cnico, mas acess√≠vel. Quando poss√≠vel, exiba os resultados de forma estruturada e facilite o entendimento do usu√°rio, como se estivesse lidando com um sistema legado real.

Importante: n√£o assuma nada que voc√™ n√£o possa consultar no banco de dados. Priorize sempre o uso das ferramentas antes de responder.
""",
        markdown=True
    )

st.title("üß† D.B.A.I. - Agente Inteligente para Bancos PostgreSQL Legados")

prompt = st.chat_input("Digite sua pergunta para o agente DBA...")

if prompt:
    st.chat_message("user").write(prompt)
    response = st.session_state.agent.run(prompt)
    st.chat_message("assistant").write(response.content)

